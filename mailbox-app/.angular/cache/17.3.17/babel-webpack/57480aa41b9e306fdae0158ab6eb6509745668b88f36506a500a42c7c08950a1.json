{"ast":null,"code":"import { Router } from '@angular/router';\nimport { AuthService } from '../auth.service';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"../auth.service\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/forms\";\nfunction LoginComponent_p_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\", 7);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate(ctx_r0.error);\n  }\n}\nexport let LoginComponent = /*#__PURE__*/(() => {\n  class LoginComponent {\n    constructor(router, auth) {\n      this.router = router;\n      this.auth = auth;\n      this.email = '';\n      this.password = '';\n      this.error = '';\n    }\n    login() {\n      if (this.email === 'admin@example.com' && this.password === 'Admin123!') {\n        this.auth.setRole('admin');\n        this.error = '';\n        this.router.navigate(['/dashboard']);\n      } else if (this.email === 'client@example.com' && this.password === 'Client123!') {\n        this.auth.setRole('client');\n        this.error = '';\n        this.router.navigate(['/dashboard']);\n      } else {\n        this.error = 'Invalid credentials';\n      }\n    }\n    static {\n      this.ɵfac = function LoginComponent_Factory(t) {\n        return new (t || LoginComponent)(i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i2.AuthService));\n      };\n    }\n    static {\n      this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n        type: LoginComponent,\n        selectors: [[\"app-login\"]],\n        decls: 10,\n        vars: 3,\n        consts: [[3, \"ngSubmit\"], [\"for\", \"email\"], [\"name\", \"email\", \"id\", \"email\", \"type\", \"email\", \"required\", \"\", 3, \"ngModelChange\", \"ngModel\"], [\"for\", \"password\"], [\"name\", \"password\", \"id\", \"password\", \"type\", \"password\", \"required\", \"\", 3, \"ngModelChange\", \"ngModel\"], [\"type\", \"submit\"], [\"class\", \"error\", 4, \"ngIf\"], [1, \"error\"]],\n        template: function LoginComponent_Template(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵelementStart(0, \"form\", 0);\n            i0.ɵɵlistener(\"ngSubmit\", function LoginComponent_Template_form_ngSubmit_0_listener() {\n              return ctx.login();\n            });\n            i0.ɵɵelementStart(1, \"label\", 1);\n            i0.ɵɵtext(2, \" Email \");\n            i0.ɵɵelementStart(3, \"input\", 2);\n            i0.ɵɵtwoWayListener(\"ngModelChange\", function LoginComponent_Template_input_ngModelChange_3_listener($event) {\n              i0.ɵɵtwoWayBindingSet(ctx.email, $event) || (ctx.email = $event);\n              return $event;\n            });\n            i0.ɵɵelementEnd()();\n            i0.ɵɵelementStart(4, \"label\", 3);\n            i0.ɵɵtext(5, \" Password \");\n            i0.ɵɵelementStart(6, \"input\", 4);\n            i0.ɵɵtwoWayListener(\"ngModelChange\", function LoginComponent_Template_input_ngModelChange_6_listener($event) {\n              i0.ɵɵtwoWayBindingSet(ctx.password, $event) || (ctx.password = $event);\n              return $event;\n            });\n            i0.ɵɵelementEnd()();\n            i0.ɵɵelementStart(7, \"button\", 5);\n            i0.ɵɵtext(8, \"Login\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵtemplate(9, LoginComponent_p_9_Template, 2, 1, \"p\", 6);\n            i0.ɵɵelementEnd();\n          }\n          if (rf & 2) {\n            i0.ɵɵadvance(3);\n            i0.ɵɵtwoWayProperty(\"ngModel\", ctx.email);\n            i0.ɵɵadvance(3);\n            i0.ɵɵtwoWayProperty(\"ngModel\", ctx.password);\n            i0.ɵɵadvance(3);\n            i0.ɵɵproperty(\"ngIf\", ctx.error);\n          }\n        },\n        dependencies: [i3.NgIf, i4.ɵNgNoValidate, i4.DefaultValueAccessor, i4.NgControlStatus, i4.NgControlStatusGroup, i4.RequiredValidator, i4.NgModel, i4.NgForm],\n        styles: [\".error[_ngcontent-%COMP%]{color:red}\"]\n      });\n    }\n  }\n  return LoginComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}